---
layout: post
title: "支付宝、微信支付二维码合并"
category: PHP
---

## 原由 ##
公司有支付业务，在用户扫码付款后，进行相关操作。目前接了两大主流的支付平台，支付宝与微信，扫码界面为两个连个并排的二维码。由于考虑到用户可能误扫以及界面简洁的因素，考虑将两个二维码合并为一个

## 原结构 ##
用户打开支付页面，创建订单，调用支付宝与微信的当面付SDK，分别生成支付串，转换成两个二维码，供用户扫码

## 新结构构思 ##
二维码实质是链接，用户使用支付宝或微信打开特定链接，就可以进行支付。如果换成一个二维码，只需要在扫码时判定客户端是支付宝还是微信，并跳转到相应链接，即服务端做一个二次跳转

## 实现 ##
原理简单，但实现过程还是遇到了微信的很多坑
###判定来源 ###
通过```user_agent```即可判定客户端来源，如果存在```AlipayClient```即为支付宝客户端扫码，如果存在```MicroMessenger```即为微信客户端扫码
###支付宝处理 ###
支付宝调用当面付SDK，生成的支付串为一个URL地址，类似于
>https://qr.alipay.com/xxxxxxxx

扫码后，支付宝内置的浏览器会访问这个地址，进行支付操作
而现在，只需要在判断到是支付宝客户端扫码之后，重定向到改地址就可以，按此思路测试了一下，没有问题

### 微信处理 ###
##### 当面付 #####
一开始认为微信应该和支付宝用一样的方式进行处理就可以，结果发现自己太年轻了。微信的当面付，生成的支付串并不是一个HTTP地址，而是以```weixin://```开头的URL Schema，当微信扫码后，检测到这个Schema就进行支付操作。然而，虽然在聊天中直接打开这个还是可以的，但在微信浏览器中把Schema跳转禁用了，也就意味着，这个方法被out了
##### H5支付 #####
既然是在微信浏览器中，第二个想到的便是通过H5支付来调起微信支付，于是试验了一下。很遗憾，H5支付只可在非微信浏览器中才可以唤起微信进行支付
##### 公众号支付 #####
在试验公众号支付前，看了文档，发现公众号支付必须要有用户的OPENID，也就意味着用户需登录授权才可以进行支付，感觉不太妥当。这个时候，参考芝麻收款提供的第三方两个二维码合并，找到一个方案，即微信扫码后，再在页面上显示一个二维码，用户长按识别二维码后进行付款。但是这种方式感觉很累赘、很山寨。所以决定再试一下公众号支付

在判断来源为微信客户端扫码后，先重定向至
>https://open.weixin.qq.com/connect/oauth2/authorize

进行授权操作。在这一步操作时，发现```scope```可以传两个参数```snsapi_base```与```snsapi_userinfo```，后者是获取用户的头像、性别等信息，需要用户授权，而前者只能获取到OPENID，只需静默授权即可，也就意味着用户不需要点登录授权
在获取用户OPENID后，对支付参数进行组装签名，最后使用JS进行调用

{% highlight shell %}
WeixinJSBridge.invoke(
            'getBrandWCPayRequest', {
           "appId":"xxxxx",    
           "timeStamp":"xxxxx",         //时间戳
           "nonceStr":"xxxxx", //随机串     
           "package":"prepay_id=xxxxx",     
           "signType":"MD5",         //微信签名方式
           "paySign":"xxxxx" //微信签名 
       },
	function(res){}
	)
{% endhighlight %}

在试验前，还需在微信商户平台填写JSAPI支付授权目录，注意，是目录，以```/```结尾

### 吐槽 ###
感觉微信的开发做得很凌乱，不仅仅是支付，还有公众平台、开放平台、商户平台，各个系统感觉不是一个有序的整体，而是东拼西凑起来的。所以很多时候，做接入开发感觉很不友好
